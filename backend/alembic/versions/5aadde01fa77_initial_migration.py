"""Initial migration

Revision ID: 5aadde01fa77
Revises: 
Create Date: 2025-10-24 04:19:40.522041

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5aadde01fa77'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_purchases_id', table_name='purchases')
    op.drop_table('purchases')
    op.drop_index('ix_order_items_id', table_name='order_items')
    op.drop_table('order_items')
    op.drop_index('ix_contents_category', table_name='contents')
    op.drop_index('ix_contents_content_type', table_name='contents')
    op.drop_index('ix_contents_id', table_name='contents')
    op.drop_index('ix_contents_title', table_name='contents')
    op.drop_table('contents')
    op.drop_index('ix_users_cibn_employee_id', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_orders_id', table_name='orders')
    op.drop_table('orders')
    op.drop_index('ix_payment_settings_id', table_name='payment_settings')
    op.drop_table('payment_settings')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('active_mode', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('test_public_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('test_secret_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('live_public_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('live_secret_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='payment_settings_pkey')
    )
    op.create_index('ix_payment_settings_id', 'payment_settings', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('orders_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'CANCELLED', 'REFUNDED', name='orderstatus'), autoincrement=False, nullable=True),
    sa.Column('payment_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('shipping_address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='orders_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey'),
    sa.UniqueConstraint('payment_reference', name='orders_payment_reference_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_orders_id', 'orders', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('SUBSCRIBER', 'CIBN_MEMBER', 'ADMIN', name='userrole'), autoincrement=False, nullable=True),
    sa.Column('cibn_employee_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_index('ix_users_cibn_employee_id', 'users', ['cibn_employee_id'], unique=False)
    op.create_table('contents',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('contents_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_type', postgresql.ENUM('DOCUMENT', 'VIDEO', 'AUDIO', 'PHYSICAL', name='contenttype'), autoincrement=False, nullable=False),
    sa.Column('category', postgresql.ENUM('EXAM_TEXT', 'CIBN_PUBLICATION', 'RESEARCH_PAPER', 'STATIONERY', 'SOUVENIR', 'OTHER', name='contentcategory'), autoincrement=False, nullable=False),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('file_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('thumbnail_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_exclusive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('stock_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('publisher', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('publication_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='contents_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_contents_title', 'contents', ['title'], unique=False)
    op.create_index('ix_contents_id', 'contents', ['id'], unique=False)
    op.create_index('ix_contents_content_type', 'contents', ['content_type'], unique=False)
    op.create_index('ix_contents_category', 'contents', ['category'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_at_purchase', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], name='order_items_content_id_fkey'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='order_items_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_items_pkey')
    )
    op.create_index('ix_order_items_id', 'order_items', ['id'], unique=False)
    op.create_table('purchases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('purchase_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('access_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_accessed', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], name='purchases_content_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='purchases_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='purchases_pkey')
    )
    op.create_index('ix_purchases_id', 'purchases', ['id'], unique=False)
    # ### end Alembic commands ###
