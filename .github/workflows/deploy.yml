name: Deploy to Huawei Server

on:
  push:
    branches:
      - main
      - production
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            cd /opt/cibn-library
            
            # Pull latest changes
            echo "📥 Pulling latest changes from GitHub..."
            git pull origin main
            
            # Create .env file from secrets if it doesn't exist
            if [ ! -f .env ]; then
              echo "📝 Creating .env file..."
              cat > .env << EOF
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
            PAYSTACK_SECRET_KEY=${{ secrets.PAYSTACK_SECRET_KEY }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            CIBN_DB_SERVER=${{ secrets.CIBN_DB_SERVER }}
            CIBN_DB_DATABASE=${{ secrets.CIBN_DB_DATABASE }}
            CIBN_DB_USERNAME=${{ secrets.CIBN_DB_USERNAME }}
            CIBN_DB_PASSWORD=${{ secrets.CIBN_DB_PASSWORD }}
            EOF
            fi
            
            # Stop existing containers
            echo "🛑 Stopping existing containers..."
            docker-compose -f docker-compose.prod.yml down
            
            # Rebuild and start containers
            echo "🔨 Building and starting containers..."
            docker-compose -f docker-compose.prod.yml up -d --build
            
            # Run database migrations
            echo "🗄️  Running database migrations..."
            docker-compose -f docker-compose.prod.yml exec -T backend alembic upgrade head || echo "⚠️  Migration skipped (manual migration may be required)"
            
            # Check container status
            echo "✅ Checking container status..."
            docker-compose -f docker-compose.prod.yml ps
            
            # Clean up old images
            echo "🧹 Cleaning up old Docker images..."
            docker image prune -af --filter "until=24h"
            
            echo "🎉 Deployment completed successfully!"

      - name: Health Check
        run: |
          echo "🏥 Waiting for services to be healthy..."
          sleep 30
          curl -f ${{ secrets.NEXT_PUBLIC_API_URL }}/health || echo "⚠️  Backend health check failed"
          curl -f ${{ secrets.FRONTEND_URL }} || echo "⚠️  Frontend health check failed"

      - name: Notify Deployment Status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi
